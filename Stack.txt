using System;

class Program
{

    static void Main()
    {
        Stack s = new Stack(10);
        Console.Clear();
        Console.WriteLine("Stack created. Possible commands are:");
        Console.WriteLine("----------------------------------------------");
        Console.WriteLine("s <number> - put the number to the stack");
        Console.WriteLine("g - get the number from the stack");
        Console.WriteLine("c - clear the stack");
        Console.WriteLine("p - peek the last number from the stack");
        Console.WriteLine("? - check whether the stack is empty");
        Console.WriteLine("t - print contents of the stack");
        Console.WriteLine("q <number> - find element");
        Console.WriteLine("x - exit");
        Console.WriteLine("----------------------------------------------");
        
        while (true)
        {
            Console.Write("> ");
            string[] str = Console.ReadLine().Split(' ');
            switch (str[0].ToCharArray()[0])
            {
                case 's':
                    s.Push(int.Parse(str[1]));
                    break;
                case 'g':
                    Console.WriteLine(s.Pop());
                    break;
                case 'c':
                    s.Clear();
                    break;
                case 'p':
                    Console.WriteLine(s.Peek());
                    break;
                case '?':
                    if (s.isEmpty() == 0) Console.WriteLine("not empty"); else Console.WriteLine("empty");
                    break;
                case 't':
                    s.Print();
                    break;
                case 'x':
                    return;
                case 'q':
                    s.Find(int.Parse(str[1]));
                        break;

                default:
                    Console.WriteLine("No such command");
                    break;
            }
        }
    }
}

class Stack
{
    int[] A;
    int top = 0;

    public Stack(int size)
    {
        A = new int[size];
    }

    public void Push(int value)
    {
        if (top < 10)
        {
            A[top] = value;
            top++;
        }
        else
            Console.WriteLine("Stack if full");
    }

    public int Pop()
    {
        return A[--top];
    }

    public void Clear()
    {
        Array.Clear(A, 0, A.Length);
    }

    public int Peek()
    {
        int temp = A[--top];
        top++;
        return temp;
    }

    public int isEmpty()
    {
        if (top == 0) return 1; else return 0;
    }

    public void Print()
    {
        for (int i = 0; i < top; i++)
            Console.WriteLine(A[i]);
    }

    public void Find(int value)
    {
        for (int i = 0; i < top; i++)
        {
            int temp = A[i];
            if (value == temp)
            {
                Console.WriteLine("Element was found");
                break;
            }
            else
            {
                Console.WriteLine("Element wasn't found");
                break;
            }
            }
        }
    }
